#!/bin/sh

# Source debconf library.

source /usr/lib/composer-debian/webusergroup

UPDATEONLY=$1

UPDATE_COMMAND="COMPOSER_HOME=/var/lib/composer composer -n -o --no-dev update "

echo Composer Global Update searching for /usr/*/*/composer.json:


case "$1" in
    "")

#	ls /usr/*/*/composer.json  | while read project; do
#	    PROJECTDIR=$(dirname $project)
#
#	    echo Updating optimized `basename $PROJECTDIR`
#	    echo  Executing	    su - $WEBUSER -s /bin/bash \"${UPDATE_COMMAND} -d ${PROJECTDIR}\"
#	    su - $WEBUSER -s /bin/bash -c "${UPDATE_COMMAND} -d ${PROJECTDIR}"
#
#	done

    ;;

    -h|--help)

        echo $0 depname - update only projects requiring given dependency 

    ;;

    *)

	egrep -ilr --include=composer.json "$1" /usr/share /var/lib | while read project; do
	    PROJECT_DIR=$(dirname $project)
	    VENDOR_DIR=$(cat $project | jq -r '.config."vendor-dir"')
	    if [ -z ${VENDOR_DIR} ]; then
		VENDOR_DIR=${PROJECT_DIR}
	    fi

	    APP       =$(basename ${PROJECT_DIR})
	    echo ProjectDir: $PROJECT_DIR VendorDir: $VENDOR_DIR 

	    mkdir -p ${VENDOR_DIR}
	    echo '{}' > ${VENDOR_DIR}/composer.lock
	    chown $WEB_USER ${VENDOR_DIR}/composer.lock

	    echo Updating optimized `basename ${PROJECTDIR}` requiring $1
	    echo executing   su - $WEBUSER -s /bin/bash \"${UPDATE_COMMAND} -d ${PROJECT_DIR}\"

	    su - ${WEBUSER} -s /bin/bash -c "${UPDATE_COMMAND} -d ${PROJECT_DIR}"
	done

    ;;
esac


